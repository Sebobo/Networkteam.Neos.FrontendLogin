prototype(Networkteam.Neos.FrontendLogin:ComponentsA.Atoms.LoginForm) < prototype(Neos.Neos:ContentComponent) {

    actionUri = Neos.Fusion:UriBuilder {
        package = 'Networkteam.Neos.FrontendLogin'
        controller = 'Authentication'
        action = 'authenticate'
    }

    redirectAfterLoginUri = Neos.Fusion:Case {
        refererIsSetAndValid {
            condition = ${request.httpRequest.arguments['referer'] && Networkteam.Neos.FrontendLogin.Hash.validate(request.httpRequest.arguments['referer'])}
            renderer = ${request.httpRequest.arguments['referer']}
        }
        default {
            condition = ${true}
            renderer = Neos.Neos:NodeUri {
                node = ${q(node).context({inaccessibleContentShown: true}).property('redirectAfterLogin')}
                @process.hmac = ${Networkteam.Neos.FrontendLogin.Hash.appendHmac(value)}
            }
        }
    }

    renderer = afx`
        <form action={props.actionUri} method="post" class="form-horizontal clearfix">
            <div class="form-group">
                <label for="networkteam-neos-frontendlogin-username" class="col-lg-4 control-label">Username:</label>
                <input name="__authentication[Neos][Flow][Security][Authentication][Token][UsernamePassword][username]" class="form-control" id="networkteam-neos-frontendlogin-username" type="text" />
            </div>
            <div class="form-group">
                <label for="networkteam-neos-frontendlogin-password" class="col-lg-4 control-label">Password:</label>
                <input name="__authentication[Neos][Flow][Security][Authentication][Token][UsernamePassword][password]" class="form-control" id="networkteam-neos-frontendlogin-password" type="password" />
            </div>
            <div class="form-group">
                <div class="pull-right">
                    <button class="btn btn-primary" >Submit</button>
                </div>
            </div>
            <input type="hidden" name="redirectAfterLoginUri" value={props.redirectAfterLoginUri} />
        </form>
    `

}